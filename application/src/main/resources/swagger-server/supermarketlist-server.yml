swagger: "2.0"
info:
  description: "Supermarket List"
  version: "1.0.0"
  title: "Supermarketlist"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "robson.william65@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "categories"
    description: "Categories"
  - name: "products"
    description: "Products"
  - name: "shopping-lists"
    description: "Shopping Lists"
  - name: "shopping-list-products"
    description: "Products of a shopping list"
  - name: "security"
schemes:
  - "https"
  - "http"
paths:
  /v1/login:
    post:
      tags:
        - "security"
      summary: "Login"
      operationId: "login"
      parameters:
        - in: "body"
          name: "jwtRequest"
          required: true
          schema:
            $ref: '#/definitions/JwtRequest'
      responses:
        200:
          description: "Login succefully"
          schema:
            $ref: '#/definitions/JwtResponse'
        401:
          description: "Username invalid"
  /v1/logout:
    delete:
      tags:
        - "security"
      summary: "Logout"
      operationId: "logout"
      parameters:
        - in: header
          name: "Authorization"
          required: true
          type: string
      responses:
        200:
          description: "Logout succefully"
        401:
          description: "No Authentication present"
  /v1/token/refresh/{refreshToken}:
    post:
      tags:
        - "security"
      summary: "Refresh token"
      operationId: "refreshToken"
      parameters:
        - in: path
          name: refreshToken
          required: true
          type: string
      responses:
        200:
          description: "Token generated successfully"
          schema:
            $ref: '#/definitions/JwtResponse'
        401:
          description: "Refresh Token invalid or expired"
  /v1/categories:
    get:
      tags:
        - 'categories'
      summary: "Get a list of categories by name"
      description: ""
      operationId: "categories#findCategories"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "name"
          description: "Category name"
          required: false
          type: "string"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductCategoryResponse"
    post:
      tags:
        - 'categories'
      summary: "Create a product category and return the created object"
      operationId: "categories#saveCategory"
      parameters:
        - in: body
          name: "category"
          description: "Category representation"
          required: true
          schema:
            $ref: '#/definitions/ProductCategoryRequest'
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/ProductCategoryResponse"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /v1/categories/{id}:
    put:
      tags:
        - "categories"
      summary: "Update a category"
      operationId: "categories#updateCategory"
      parameters:
        - in: path
          name: "id"
          required: true
          type:
            "string"
        - in: body
          name: "category"
          description: "Category request representation"
          required: true
          schema:
            $ref: "#/definitions/ProductCategoryRequest"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/ProductCategoryResponse"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /v1/categories/{categoryId}/products:
    get:
      tags:
        - "products"
      summary: "Select All Products of given category"
      operationId: "categories#findProductsByCategoryId"
      parameters:
        - in: path
          name: "categoryId"
          required: true
          type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductResponse"
        404:
          description: "No product category was found for the given id"
  /v1/products:
    get:
      tags:
        - "products"
      summary: "List products"
      operationId: "products#findAll"
      parameters:
        - in: "query"
          name: "name"
          type: "string"
        - in: "query"
          name: "category"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
      responses:
        200:
          description: "Collection of products"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductResponse"
  /v1/lists:
    post:
      tags:
        - "shopping-lists"
      summary: "Create a shopping list with optional products"
      operationId: "shopping-list#save"
      parameters:
        - in: "body"
          name: "shoppingList"
          required: true
          schema:
            $ref: "#/definitions/ShoppingListRequest"
      responses:
        201:
          description: "The created shopping list representation"
          schema:
            $ref: "#/definitions/ShoppingListResponse"
  /v1/lists/{shoppingListId}/clone:
    post:
      tags:
        - "shopping-lists"
      summary: "Clone a shopping list with products"
      operationId: "shopping-list#clone"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          required: true
      responses:
        201:
          description: "The created shopping list representation"
          schema:
            $ref: "#/definitions/ShoppingListResponse"
        404:
          description: "Not found"
  /v1/lists/{shoppingListId}/products:
    get:
      tags:
        - "shopping-list-products"
      summary: "Shopping list products"
      operationId: "shopping-list-products#findAll"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          required: true
      responses:
        200:
          description: "Collection of products"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductSelectionResponse"
        404:
          description: "Shopping list not found"

  /v1/lists/{shoppingListId}/products/{productId}:
    put:
      tags:
        - "shopping-list-products"
      summary: "Put a product in given shopping list"
      operationId: "shopping#products#putProductInList"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "path"
          name: "productId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "query"
          name: "quantity"
          type: "integer"
          required: false
      responses:
        204:
          description: "Accepted"
        404:
          description: "Shopping List or product not found"
    delete:
      tags:
        - "shopping-list-products"
      summary: "Remove a product from given shopping list"
      operationId: "shopping#products#removeProductInList"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "path"
          name: "productId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
      responses:
        204:
          description: "Accepted"
        404:
          description: "Shopping List or product not found"
  /v1/lists/{shoppingListId}/products/{productId}/quantity:
    post:
      tags:
        - "shopping-list-products"
      summary: "Increase product total on list"
      operationId: "shopping#products#increaseProductsInList"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "path"
          name: "productId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
      responses:
        204:
          description: "Accepted"
        404:
          description: "Shopping List or product not found"
    delete:
      tags:
        - "shopping-list-products"
      summary: "Decrease products on list"
      operationId: "shopping#products#decreaseProductsInList"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "path"
          name: "productId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
      responses:
        204:
          description: "Accepted"
        404:
          description: "Shopping List or product not found"
  /v1/lists/{shoppingListId}/products/{productId}/checked:
    put:
      tags:
        - "shopping-list-products"
      summary: "Toggle product as checked in list"
      operationId: "shopping#products#check"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "path"
          name: "productId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
      responses:
        204:
          description: "Accepted"
        404:
          description: "Shopping List or product not found"
    delete:
      tags:
        - "shopping-list-products"
      summary: "Toggle product as unchecked in list"
      operationId: "shopping#products#uncheck"
      parameters:
        - in: "path"
          name: "shoppingListId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
        - in: "path"
          name: "productId"
          type: "string"
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          maxLength: 36
          required: true
      responses:
        204:
          description: "Accepted"
        404:
          description: "Shopping List or product not found"
definitions:
  JwtRequest:
    required:
      - username
      - password
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  JwtResponse:
    type: object
    properties:
      token:
        type: string
      expiration:
        type: integer
      refresh_token:
        type: string
  ProductCategoryRequest:
    required:
      - name
    type: "object"
    properties:
      name:
        type: "string"
  ProductCategoryResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  ErrorRepresentation:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            field:
              type: "string"
            message:
              type: "string"
  ProductResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      category:
        $ref: '#/definitions/ProductCategoryResponse'
  ProductSelectionRequest:
    type: "object"
    required:
      - id
    properties:
      id:
        type: "string"
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        maxLength: 36
        minLength: 36
      checked:
        type: "boolean"
      quantity:
        type: "integer"
  ProductSelectionResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      category:
        $ref: '#/definitions/ProductCategoryResponse'
      quantity:
        type: "integer"
      shoppingListId:
        type: "string"
      checked:
        type: "boolean"
  ShoppingListRequest:
    type: "object"
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductSelectionRequest"
  ShoppingListResponse:
    type: "object"
    properties:
      id:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      locked:
        type: "boolean"
      empty:
        type: "boolean"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"